package com.lg.controller;

import java.io.File;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.lg.dto.FreeDTO;
import com.lg.service.FreeService;

@Controller
@RequestMapping("/free/*")
public class FreeController {

	@Autowired
	FreeService freeService;
	
	@RequestMapping("list.do")
	public String freeList(Model model) throws Exception {
		List<FreeDTO> freeList = freeService.freeList();
		model.addAttribute("freeList",freeList);
		return "free/freeList";
	}
	@GetMapping("detail.do")
	public String getfreeDetail(HttpServletRequest request, Model model) throws Exception {
		int feq = Integer.parseInt(request.getParameter("feq"));
		FreeDTO dto = freeService.freeDetail(feq);
		model.addAttribute("dto", dto);
		return "free/freeDetail";
	}
	@GetMapping("insert.do")
	public String insertForm(HttpServletRequest request, Model model) throws Exception {
		return "free/freeInsert";
	}
	@PostMapping("insert.do")
	public String freeInsert(HttpServletRequest request, Model model) throws Exception {
		FreeDTO dto = new FreeDTO();
		dto.setTitle(request.getParameter("title"));
		dto.setContent(request.getParameter("content"));
		dto.setId(request.getParameter("id"));
		freeService.freeInsert(dto);
		return "redirect:list.do";
	}
	@GetMapping("delete.do")
	public String freeDelete(HttpServletRequest request, Model model) throws Exception {
		int feq = Integer.parseInt(request.getParameter("feq"));
		freeService.freeDelete(feq);
		return "redirect:list.do";
	}
	@GetMapping("edit.do")
	public String editForm(HttpServletRequest request, Model model) throws Exception {
		int feq = Integer.parseInt(request.getParameter("feq"));
		FreeDTO dto = freeService.freeDetail(feq);
		model.addAttribute("dto", dto);
		return "free/freeEdit";
	}
	@PostMapping("edit.do")
	public String freeEdit(HttpServletRequest request, Model model) throws Exception {
		int feq = Integer.parseInt(request.getParameter("feq"));
		FreeDTO dto = new FreeDTO();
		dto.setFeq(feq);
		dto.setTitle(request.getParameter("title"));
		dto.setContent(request.getParameter("content"));
		dto.setId(request.getParameter("id"));
		freeService.freeInsert(dto);
		return "redirect:list.do";
	}
	//ckeditor를 이용한 이미지 업로드
	@RequestMapping(value="imageUpload.do", method = RequestMethod.POST)
	public void imageUpload(HttpServletRequest request, HttpServletResponse response, MultipartHttpServletRequest multiFile, @RequestParam MultipartFile upload) throws Exception {
		// 랜덤 문자 생성
		UUID uid = UUID.randomUUID();
		
		OutputStream out = null;
		PrintWriter printWriter = null;
		
		//인코딩
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		try {
			//파일 이름 가져오기
			String fileName = upload.getOriginalFilename();
			byte[] bytes = upload.getBytes();
			
			//이미지 경로 생성
			String path = "D:\\peace\\pro04\\pro04\\src\\main\\webapp\\resources\\upload" + "ckImage/";		//이미지 경로 설정
			String ckUploadPath = path + uid + "_" + fileName;
			File folder = new File(path);
			System.out.println("path:"+path);	//이미지 저장경로 console에 확인
			//해당 디렉토리 확인
			if(!folder.exists()) {
				try {
					folder.mkdirs();  //폴더 생성
				} catch(Exception e) {
					e.getStackTrace();
				}
			}
		}
		
	}
}
